version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    networks: 
      - mynetwork
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    networks: 
      - mynetwork
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - ~/apps/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=citizix
      - MONGO_INITDB_ROOT_PASSWORD=S3cret
    networks: 
      - mynetwork
  discovery-service:
    image: discovery-service
    container_name: discovery-service
    ports:
      - "8010:8010" 
    networks: 
      - mynetwork
  configuration-service:
    image: configuration-service
    container_name: configuration-service
    depends_on: 
      discovery-service:
        condition: service_started
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    ports:
      - "8888:8888"
    networks: 
      - mynetwork  
  gateway-service:
    image: gateway-service
    container_name: gateway-service
    restart: on-failure
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    depends_on: 
      configuration:
        condition: service_started
      discovery:
        condition: service_started
    ports:
      - "8081:8081"
    networks: 
      - mynetwork
  auth-service:
    image: auth-service
    container_name: auth-service
    restart: on-failure
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    depends_on: 
      configuration:
        condition: service_started
      discovery:
        condition: service_started
    ports:
      - "8090:8090"
    networks: 
      - mynetwork
  seller-service:
    image: seller-service
    container_name: seller-service
    restart: on-failure
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    depends_on: 
      configuration:
        condition: service_started
      discovery:
        condition: service_started
    ports:
      - "8020:8020"
    networks: 
      - mynetwork
  product-service:
    image: product-service
    container_name: product-service
    restart: on-failure
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    depends_on: 
      configuration:
        condition: service_started
      discovery:
        condition: service_started
    ports:
      - "8030:8030"
    networks: 
      - mynetwork
  buyer-service:
    image: buyer-service
    container_name: buyer-service
    restart: on-failure
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    depends_on: 
      configuration:
        condition: service_started
      discovery:
        condition: service_started
    ports:
      - "8040:8040"
    networks: 
      - mynetwork
  bid-service:
    image: bid-service
    container_name: bid-service
    restart: on-failure
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    depends_on: 
      configuration:
        condition: service_started
      discovery:
        condition: service_started
    ports:
      - "8050:8050"
    networks: 
      - mynetwork
  listing-service:
    image: listing-service
    container_name: listing-service
    restart: on-failure
    environment:
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8010/eureka
    depends_on: 
      configuration:
        condition: service_started
      discovery:
        condition: service_started
    ports:
      - "8060:8060"
    networks: 
      - mynetwork
networks: 
  mynetwork:
    driver: bridge  